1, Building the sub projects
mvn install

2, Building an docker image of a spring boot project using maven
mvn spring-boot:build-image
or alternatively (not tried)
mvn clean package docker:build

3, Cleaning builds
mvn clean
This commands will eliminate all jars built previouslym


4, command : mvn clean package
Cleans the project: Removes all files generated by previous builds from the target directory, including compiled classes, resources, and other build artifacts.
Packages the project: Compiles the source code, runs tests (if configured), and packages the project into a JAR or WAR file (depending on the project’s configuration) and places it in the target directory.



mvn package:

Compiles the code (if necessary)
Packages the project into a JAR or WAR file (depending on the project’s packaging type)
Places the packaged artifact in the target directory (by default)

mvn install:

Executes all phases up to and including the install phase, which includes:
Compiling the code (if necessary)
Packaging the project into a JAR or WAR file (depending on the project’s packaging type)
Installing the packaged artifact into the local Maven repository (~/.m2/repository by default)
Making the artifact available for use as a dependency in other projects locally
In summary, mvn package only packages the project and places it in the target directory, whereas mvn install not only packages the project but also installs it into the local Maven repository, making it available for use as a dependency in other projects.